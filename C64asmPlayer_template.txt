;Fami2C64 player for THE COMMODORE SIXTY-FUCKING FOUR

; 10 SYS (2304)

*=$0801

        BYTE    $0E, $08, $0A, $00, $9E, $20, $28,  $32, $33, $30, $34, $29, $00, $00, $00


*=$0900

defm    mPrint
        LDA #/1
        JSR PRINT_CHAR
        endm



defm    PrintValue
                TAX
                LDA #$00
                JSR $DDCD
                LDX #0
                endm

defm    PrintHex ; print hex value to a screen location
        pha
        lsr
        lsr
        lsr
        lsr
        tax
        lda convtable,x
        sta /1
        pla
        and #$0f
        tax
        lda convtable,x
        sta /2
        LDX #0
        endm


start   
        LDA numloopsconst
        STA numloops

        LDA 678
        CMP #1 ; 0=NTSC, 1=PAL
        BEQ LoadPALSpeed
        LDA NTSCSpeed
        STA Tempo
        STA TempoConst
        JMP AfterTempo
LoadPALSpeed
        LDA PALSpeed
        STA Tempo
        STA TempoConst

AfterTempo
        LDX #0


loopstart

        LDA s3addrlowlist
        STA s3addrlow
        LDA s3addrhighlist
        STA s3addrhigh
        LDA s2addrlowlist
        STA s2addrlow
        LDA s2addrhighlist
        STA s2addrhigh
        LDA s1addrhighlist
        STA s1addrhigh
        LDA s1addrlowlist
        STA s1addrlow
        LDA n4addrhighlist
        STA n4addrhigh
        LDA n4addrlowlist
        STA n4addrlow

        LDA #1
        STA ByteOne
        STA s3request
        STA s2request
        STA s1request
        STA n4request  

        LDA #15
        STA VOLUME

        LDA #0
        STA SID1ToneLowRegister
        STA SID1ToneHighRegister
        STA SID2ToneLowRegister
        STA SID2ToneHighRegister

        LDX #0
        JSR hprint
        LDA numloops
        PrintHex 1307,1308 ; 1024 + 7 + 3

        LDA #0
        STA 54274 ; Square Wave Duty Cycle 1 Voice 1
        STA 54281 ; Square Wave Duty Cycle 1 Voice 1

        LDA #8
        STA 54275 ;Square Wave Duty Cycle 2 Voice 1
        STA 54282 ;Square Wave Duty Cycle 2 Voice 2

        LDA #65
        STA 54276 ;Waveform Select Voice 1
        STA 54283 ;Waveform Select Voice 2

        LDA #17
        STA 54290 ;Waveform Select Voice 3

        LDA #0
        STA 54277 ; attack/decay duration Voice 1
        STA 54284 ; attack/decay duration Voice 2
        STA 54291 ; attack/decay duration Voice 3

        LDA #128
        STA 54278 ;sustain level / release duration Voice 1
        STA 54285 ;sustain level / release duration Voice 2

        LDA #240
        STA 54292 ;sustain level / release duration Voice 3

        LDA #0
        STA SID1ToneLowRegister
        STA SID1ToneLowByte
        STA SID1ToneLowByteLoad
        STA 1024 ;3072
        STA SID1ToneHighRegister
        STA SID1ToneHighByte
        STA SID1ToneHighByteLoad
        STA 55296 ;17408
        STA SID2ToneLowRegister
        STA SID2ToneLowByte
        STA SID2ToneLowByteLoad
        STA 1025 ;3072
        STA SID2ToneHighRegister
        STA SID2ToneHighByte
        STA SID2ToneHighByteLoad
        STA 55297 ;17408
        STA SID3ToneLowRegister
        STA SID3ToneLowByte
        STA SID3ToneLowByteLoad
        STA 1026 ;3072
        STA SID3ToneHighRegister
        STA SID3ToneHighByte
        STA SID3ToneHighByteLoad
        STA 55298 ;17408




        
soundloop

        LDY #1
        CPY s3request
        BEQ s3requesthelp
        CPY s2request
        BEQ s2requesthelp
        CPY s1request
        BEQ s1requesthelp
        CPY n4request
        BEQ n4requesthelp
        JMP sounddelaysetup

s1requesthelp
        JMP s1requestnote
s2requesthelp
        JMP s2requestnote
s3requesthelp
        JMP s3requestnote
n4requesthelp
        JMP n4requestnote
        
; -------------- S3 Note Request ---------;
s3requestnote
        LDA s3addrhigh          ;load in current note index
        STA AddrHigh
        LDA s3addrlow           ; load in current note index
        STA AddrLow 
        LDA ($AC,x)             ;load in s3 note

        CMP #109                 ;if 109 then jump to new pattern request subroutine
        BNE skipnewpatternreq   ;if not 109 then skip the JSR and load in the next note data

newpatternreq
        INC patterncounter
        LDX patterncounter

        LDA s3addrhighlist,x
        STA s3addrhigh
        LDA s3addrlowlist,x
        STA s3addrlow
        LDA s2addrhighlist,x
        STA s2addrhigh
        LDA s2addrlowlist,x
        STA s2addrlow
        LDA s1addrhighlist,x
        STA s1addrhigh
        LDA s1addrlowlist,x
        STA s1addrlow
        LDA n4addrhighlist,x
        STA n4addrhigh
        LDA n4addrlowlist,x
        STA n4addrlow 

        LDA s3addrhigh
        CMP #80 ; end song code
        BEQ exithelp

        LDX #0
        LDA s3addrhigh ; reload in the first s3 note, since the old code was 99
        STA AddrHigh
        LDA s3addrlow 
        STA AddrLow 
        LDA ($AC,x)
        STA SID1Note

skipnewpatternreq

        CMP #108  ; transparent note - keep do not load new tone
        BEQ s3tnote


        ;LDX SID1Note
        TAX
        JSR LoadToneLow
        STA SID1ToneLowByte
        JSR LoadToneHigh
        STA SID1ToneHighByte
        LDX #0

s3tnote
        LDA $AC      ;check AddrLow to see if it's about to overflow
        CMP #255
        BEQ s3inc1
        INC $AC
        JMP s3requestdur

exithelp
        JMP incexit

s3inc1   
        JSR incaddr    

        
s3requestdur

        LDA ($AC,x)
        STA s3duration

        LDA $AC
        CMP #255
        BEQ s3inc2
        INC $AC
        JMP s3saveaddr
        
s3inc2
       JSR incaddr

s3saveaddr
        LDA AddrLow
        STA s3addrlow
        LDA AddrHigh
        STA s3addrhigh
        LDA #0
        STA s3request
        STA s3loopcount

        LDY #1
        CPY s2request
        BEQ s2requestnote
        CPY s1request
        BEQ s1requestnote
        CPY n4request
        BEQ n4requesthelp2
        JMP loadsound

n4requesthelp2
        JMP n4requestnote


; -------------- S2 Note Request ---------;

s2requestnote
        LDA s2addrhigh ;load in current note index
        STA AddrHigh
        LDA s2addrlow ; load in current note index
        STA AddrLow 
        LDA ($AC,x) ;load in s2 note
        STA SID2Note

        CMP #108  ; transparent note - keep do not load new tone
        BEQ s2tnote

        TAX
        JSR LoadToneLow
        STA SID2ToneLowByte
        JSR LoadToneHigh
        STA SID2ToneHighByte
        LDX #0

s2tnote
        LDA $AC      ;check AddrLow to see if it's about to overflow
        CMP #255
        BEQ s2inc1
        INC $AC
        JMP s2requestdur

s2inc1
       JSR incaddr   
        
s2requestdur

        LDA ($AC,x)
        STA s2duration

        LDA $AC
        CMP #255
        BEQ s2inc2
        INC $AC
        JMP s2saveaddr
        
s2inc2
       JSR incaddr

s2saveaddr
        LDA AddrLow
        STA s2addrlow
        LDA AddrHigh
        STA s2addrhigh
        LDA #0
        STA s2request
        STA s2loopcount

        LDA #1
        CMP s1request
        BEQ s1requestnote
        CMP n4request
        BEQ n4requestnote
        JMP loadsound

; -------------- s1 Note Request ---------;
s1requestnote
        LDA s1addrhigh ;load in current note index
        STA AddrHigh
        LDA s1addrlow ; load in current note index
        STA AddrLow 
        LDA ($AC,x) ;load in s1 note
        STA SID3Note

        CMP #108  ; transparent note - keep do not load new tone
        BEQ s1tnote

        TAX
        JSR LoadToneLow
        STA SID3ToneLowByte
        JSR LoadToneHigh
        STA SID3ToneHighByte
        LDX #0

s1tnote
        LDA $AC      ;check AddrLow to see if it's about to overflow
        CMP #255
        BEQ s1inc1
        INC $AC
        JMP s1requestdur

s1inc1
       JSR incaddr  
        
s1requestdur

        LDA ($AC,x)
        STA s1duration

        LDA $AC
        CMP #255
        BEQ s1inc2
        INC $AC
        JMP s1saveaddr
        
s1inc2
       JSR incaddr

s1saveaddr
        LDA AddrLow
        STA s1addrlow
        LDA AddrHigh
        STA s1addrhigh
        LDA #0
        STA s1request
        STA s1loopcount

        LDA #1
        CMP n4request
        BEQ n4requestnote
        JMP loadsound


; -------------- n4 Note Request ---------;
n4requestnote
        LDA n4addrhigh ;load in current note index
        STA AddrHigh
        LDA n4addrlow ; load in current note index
        STA AddrLow 
        LDA ($AC,x) ;load in n4 note
        STA n4note

        TAX
        JSR LoadToneLow
        STA n4tonelow
        JSR LoadToneHigh
        STA n4tonehigh
        LDX #0

        LDA $AC      ;check AddrLow to see if it's about to overflow
        CMP #255
        BEQ n4inc1
        INC $AC
        JMP n4requestdur

n4inc1
       LDA #0
       STA $AC
       INC $AD    
        
n4requestdur

        LDA ($AC,x)
        STA n4duration

        LDA $AC
        CMP #255
        BEQ n4inc3
        INC $AC

        JMP n4saveaddr
        
n4inc3
       LDA #0
       STA $AC
       INC $AD

n4saveaddr
        LDA AddrLow
        STA n4addrlow
        LDA AddrHigh
        STA n4addrhigh
        LDA #0
        STA n4request
        STA n4loopcount



; ---------- load sound --------- ;


loadsound
        JSR loadsoundjsr



; ---------- sound delay loop --------- ;
      
sounddelaysetup
        LDA #0
        STA sounddelayhighbyte
 

sounddelaylowsetup
        LDA #0
        STA sounddelaylowbyte

sounddelaylow

pwmcheck
       LDA #0
       CMP pwmval
       BEQ pwmon
       

pwmoff
      ;LDA #0
      LDA n4tonelow
      STA n4
      STA pwmval 
      JMP pwmdone

pwmon 
        LDA n4tonelow
        STA n4
        LDA #1
        STA pwmval

pwmdone

       
        LDA sounddelaylowbyte

        CMP Tempo



        BEQ sounddelayhigh
        INC sounddelaylowbyte
        JMP sounddelaylow

sounddelayhigh
        

displayinfo

        LDA SID1ToneLowByte
        PrintHex 1107,1108
        LDA SID1ToneHighByte
        PrintHex 1110,1111

        LDA SID2ToneLowByte
        PrintHex 1147,1148
        LDA SID2ToneHighByte
        PrintHex 1150,1151

        LDA SID3ToneLowByte
        PrintHex 1187,1188
        LDA SID3ToneHighByte
        PrintHex 1190,1191

        LDA n4tonelow
        PrintHex 1227,1228

        LDA patterncounter
        PrintHex 1267,1268


        LDA #0
        STA sounddelaylowbyte
        ;STA n4
        ;STA n4tonelow
        JSR loadsoundjsr

        LDA sounddelayhighbyte
        CMP SpeedHighByte
        BEQ sounddelayloop
        INC sounddelayhighbyte
        JMP sounddelaylow

        

sounddelayloop                  ; used for duration counter
        LDA #0
        STA sounddelayhighbyte
        STA sounddelaylowbyte

; ---------- S3 check for new note --------- ;
s3newnotecheck
        LDA s3loopcount
        CMP s3duration
        BEQ s3newnote
        INC s3loopcount
        JMP s2newnotecheck ; goto check to see if S2 needs a new note

; ---------- S3 new note found, latch request --------- ;
s3newnote
        LDA #1
        STA s3request

; ---------- S2 check for new note --------- ;
s2newnotecheck
        LDA s2loopcount
        CMP s2duration
        BEQ s2newnote
        INC s2loopcount
        JMP s1newnotecheck

; ---------- S2 new note found, latch request --------- ;
s2newnote
        LDA #1
        STA s2request


; ---------- S1 check for new note --------- ;
s1newnotecheck
        LDA s1loopcount
        CMP s1duration
        BEQ s1newnote
        INC s1loopcount
        JMP n4mutecheck

; ---------- S1 new note found, latch request --------- ;
s1newnote
        LDA #1
        STA s1request

;     Noise Channel Mute     ;  - Mute after X loops without reseting note duration counter
n4mutecheck                  ; - This makes the noise sound more like drums would
        LDA n4loopcount
        CMP #0
        BEQ n4mute
        JMP n4newnotecheck

n4mute
        LDA #0
        STA N4          ; send 0 to noise voice register
        STA 1027        ; send 0 to noise indicator on the screen
        STA n4tonelow
        STA n4tonehigh

n4newnotecheck
        LDA n4loopcount
        CMP n4duration
        BEQ n4newnote
        INC n4loopcount
        JMP frameinc

n4newnote
        LDA #1
        STA n4request

; Change frame state every 40 loops ;        
frameinc
        LDA framecount
        CMP frameinterval
        BEQ frametest
        INC framecount

endofloop
        LDA 203 ; current key
        CMP #64
        BNE keycheck ; check inputs for quitting, skipping next, etc.
afterkeycheck
        LDA 203
        STA keypressold
        LDA TempoConst
        STA Tempo
        JMP soundloop

frametest
        
       JMP fadeout 
fadetest
       LDA #0
       STA framecount
       LDA framestate        ; if framestate=0 then goto frame0
       CMP #0
       BEQ frame0 
frame1

        LDA #0
        STA framestate
        JMP soundloop

frame0

        LDA #1
        STA framestate
        JMP soundloop

keycheck
        CMP #62 ;Q
        BEQ keyquit
        CMP #28 ;N
        BEQ keynext
        CMP #35 ;B
        BEQ keyrev
        CMP #21 ;F       
        BEQ keyfast
        CMP #17 ;R
        BEQ keyback
        CMP #40 ;+
        BEQ keyloopup
        CMP #71 ;-
        BEQ keyloopdown

        JMP soundloop
keyquit
        LDA #99
        STA CURRENTSONG
        LDA #0
        STA numloops
        JMP exit
keynext
        LDA #0
        STA numloops
        JMP incexit
keyrev 
        LDA #0
        STA numloops
        JMP decexit
keyfast
        LDA #1
        STA Tempo
        JMP soundloop
keyback
        LDA keypressold
        CMP #64
        BNE afterkeycheckhelp
        DEC patterncounter
        JMP afterkeycheck
keyloopup
        LDA keypressold
        CMP #64
        BNE afterkeycheckhelp
        INC numloops
        LDA numloops
        PrintHex 1307,1308
        JMP afterkeycheck

keyloopdown
        LDA keypressold
        CMP #64
        BNE afterkeycheckhelp
        DEC numloops
        LDA numloops
        PrintHex 1307,1308
        JMP afterkeycheck

afterkeycheckhelp
        JMP afterkeycheck

loophelp
        DEC numloops
        LDA numloops
        DEC CURRENTSONG
        PrintHex 1307,1308
        LDA LoopPoint
        STA patterncounter
        JMP newpatternreq

decexit
        DEC CURRENTSONG
        DEC CURRENTSONG
incexit
        INC CURRENTSONG

exit    
        LDA #0
        CMP numloops
        BNE loophelp
        STA patterncounter
        STA HASPLAYED
        LDA #147
        JSR PRINT_CHAR
        LDA #254
        STA 53280
        LDA #246
        STA 53281
        LDA #0
        STA VOLUME
        RTS

LoadToneLow
        LDA 678
        CMP #1 ; 0=NTSC, 1=PAL
        BEQ LoadToneLowPAL
        LDA NTSCToneLowByte,x
        RTS
LoadToneLowPAL
        LDA PALToneLowByte,x
        RTS

LoadToneHigh
        LDA 678
        CMP #1 ; 0=NTSC, 1=PAL
        BEQ LoadToneHighPAL
        LDA NTSCToneHighByte,x
        RTS
LoadToneHighPAL
        LDA PALToneHighByte,x
        RTS

;print header info
hprint  LDA sstring,X
        CMP #36
        BEQ hexit
        JSR PRINT_CHAR
        INX
        JMP hprint
hexit   LDX #0
        RTS


fadeout
        LDA numloops
        CMP #0
        BNE fadetesthelp
        LDA patterncounter
        CMP fadeouttime
        BCS decreasevolume
        JMP fadetest
decreasevolume

        DEC VOLUME
        LDA #0
        CMP VOLUME
        BEQ clearloops
        JMP fadetest
fadetesthelp
        JMP fadetest
clearloops
        LDA #0
        STA numloops
        JMP incexit

incaddr
       LDA #0
       STA $AC
       INC $AD
       RTS

loadsoundjsr

        LDA #32
        STA 1064
        STA 1065
        STA 1066

        LDA SID1ToneHighByte
        STA SID1ToneHighByteLoad
        LDA SID1ToneLowByte
        STA SID1ToneLowByteLoad
        LDA SID2ToneHighByte
        STA SID2ToneHighByteLoad
        LDA SID2ToneLowByte
        STA SID2ToneLowByteLoad
        LDA SID3ToneHighByte
        STA SID3ToneHighByteLoad
        LDA SID3ToneLowByte
        STA SID3ToneLowByteLoad

        LDA #65
        STA SID1Command
        STA SID2Command
        LDA #17
        STA SID3Command   

        LDA #128
        STA SID1Sustain
        STA SID2Sustain
        ;STA 54278 ;sustain level / release duration Voice 1
        ;STA 54285 ;sustain level / release duration Voice 2

        LDA #240
        STA SID3Sustain
        ;STA 54292 ;sustain level / release duration Voice 3

        ;LDA #3            ; uncomment to force noise channel to just the triangle
        ;STA NoiseRotate

        ;LDA #0           ; uncomment to mute noise channel
        ;STA n4tonehigh

noisecheck
        LDA n4tonehigh
        CMP #0
        BEQ LoadSIDhelp  ; if no noise note, go straight to SID sound parameters

        LDA SID1ToneHighByte ; check to see if SID1 is not currently playing a note
        CMP #0
        BEQ SID1ToNoise 

        LDA SID2ToneHighByte ; check to see if SID2 is not currently playing a note
        CMP #0
        BEQ SID2ToNoise

        LDA SID3ToneHighByte ; check to see if SID3 is not currently playing a note
        CMP #0
        BEQ SID3ToNoise

        LDA NoiseRotate
        CMP #1
        BEQ SID1ToNoise
        CMP #2
        BEQ SID2ToNoise
        CMP #3
        BEQ SID3ToNoise
        JMP LoadSID

LoadSIDhelp
        JMP LoadSID

SID1ToNoise
        LDA #129
        STA SID1Command
        LDA n4tonelow
        STA SID1ToneLowByteLoad
        LDA n4tonehigh
        STA SID1ToneHighByteLoad   
        INC NoiseRotate
        LDA #81
        STA 1064
        LDA #128
        STA SID1Sustain

        JMP LoadSID
SID2ToNoise
        LDA #129
        STA SID2Command
        LDA n4tonelow
        STA SID2ToneLowByteLoad
        LDA n4tonehigh
        STA SID2ToneHighByteLoad 
        LDA #3
        STA NoiseRotate
        LDA #81
        STA 1065

        LDA #128
        STA SID2Sustain
        JMP LoadSID
SID3ToNoise
        LDA #129
        STA SID3Command
        LDA n4tonelow
        STA SID3ToneLowByteLoad
        LDA n4tonehigh
        STA SID3ToneHighByteLoad 
        LDA #81
        STA 1066

        LDA #240
        STA SID3Sustain
        INC NoiseRotate
LoadSID

        LDA noiserotate
        CMP #4
        BNE LoadSID1
        LDA #1
        STA noiserotate

LoadSID1 
        LDA SID1Command
        STA 54276
        LDA SID1ToneLowByteLoad
        STA SID1ToneLowRegister
        STA 1024 ;3072
        LDA SID1Sustain
        STA 54278

        LDA SID1ToneHighByteLoad
        STA SID1ToneHighRegister
        STA 55296 ;17408

        LDA SID2Command
        STA 54283
        LDA SID2ToneLowByteLoad
        STA SID2ToneLowRegister
        STA 1025
        LDA SID2ToneHighByteLoad
        STA SID2ToneHighRegister
        STA 55297
        LDA SID2Sustain
        STA 54285

        LDA SID3Command
        STA 54290
        LDA SID3ToneLowByteLoad
        STA SID3ToneLowRegister
        STA 1026
        LDA SID3ToneHighByteLoad
        STA SID3ToneHighRegister
        STA 55298
        LDA SID3Sustain
        STA 54292

        LDA n4tonelow
        STA N4
        STA 55299
        STA 1027
        RTS


SingleKeyDelayJSR
        LDA 203
        STA keydelaycurrent
        CMP #10
        BNE SingleKeyDelayLoop
        LDA keydelayold
        CMP #64
        BEQ SingleKeyDelayRTS
SingleKeyDelayLoop
        LDA keydelaycurrent
        STA keydelayold
        JMP SingleKeyDelayJSR
SingleKeyDelayRTS
        RTS


PRINT_CHAR = $FFD2
PRINT_VALUE = $BDCD

SID3ToneLowRegister=54286
SID3ToneHighRegister=54287

SID2ToneLowRegister=54279
SID2ToneHighRegister=54280

SID1ToneLowRegister=54272
SID1ToneHighRegister=54273


N4=17670
VOLUME=54296

CURRENTSONG=17672
HASPLAYED=17673


AddrLow=$AC
AddrHigh=$AD

FrameCountHigh  byte 0
FrameCountLow   byte 0

pwmval  byte 0

convtable    byte $30,$31,$32,$33,$34,$35,$36,$37
      byte $38,$39,$01,$02,$03,$04,$05,$06 

s1string        null 'S1'
                byte 61
                byte 0
s2string        null 'S2'
                byte 61
                byte 0
s3string        null 'S3'
                byte 61
                byte 0


BackgroundColor  byte 0
ByteOne                 byte 0

sounddelaylowbyte   byte 0
sounddelayhighbyte  byte 0

framecount     byte 0
framestate    byte 0
keypressold     byte 0

totalframecount byte 0

SID1Command     byte 0
SID2Command     byte 0
SID3Command     byte 0

SID1Sustain     byte 0
SID2Sustain     byte 0
SID3Sustain    byte 0

s3request       byte 0
s3notepos       byte 0
SID1ToneLowByte       byte 0
SID1ToneHighByte      byte 0
SID1ToneLowByteLoad       byte 0
SID1ToneHighByteLoad      byte 0
s3duration      byte 0
s3loopcount     byte 0
s3addrhigh      byte 0
s3addrlow       byte 0
SID1Note        byte 0

keydelayold     byte 0
keydelaycurrent byte 0


s2request       byte 0
s2notepos       byte 0
SID2ToneLowByte       byte 0
SID2ToneLowByteLoad     byte 0
SID2ToneHighByte      byte 0
SID2ToneHighByteLoad     byte 0
s2duration      byte 0
s2loopcount     byte 0
s2addrhigh      byte 0
s2addrlow       byte 0
SID2Note        byte 0

s1request       byte 0
s1notepos       byte 0
SID3ToneLowByte       byte 0
SID3ToneHighByte      byte 0
SID3ToneLowByteLoad       byte 0
SID3ToneHighByteLoad      byte 0
s1duration      byte 0
s1loopcount     byte 0
s1addrhigh      byte 0
s1addrlow       byte 0
SID3Note        byte 0

n4request       byte 0
n4notepos       byte 0
n4tonelow       byte 0
n4tonehigh      byte 0
n4duration      byte 0
n4loopcount     byte 0
n4addrhigh      byte 0
n4addrlow       byte 0
n4note          byte 0
noiserotate     byte 1

numloops        byte 0

patterncounter  byte 0

Tempo   byte 0
TempoConst      byte 0
NTSCSpeed       byte 52 ;67 w/ PWM, 146 w/o 
PALSpeed        byte 52 ;73 w/ PWM, 160 w/o

SpeedHighByte   byte 4

;PAL Tones
PALToneHighByte     byte 1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5,5,5,6,6,6,7,7,8,8,9,9,10,10,11,12,13,13,14,15,16,17,18,19,20,21,23,24,26,27,29,31,32,34,36,39,41,43,46,49,52,55,58,62,65,69,73,78,82,87,92,98,104,110,117,124,131,139,147,156,165,175,185,196,208,221,234,248,0,0,0
PALToneLowByte    byte 22,39,57,75,95,116,138,161,186,212,240,14,45,78,113,150,190,231,20,66,116,169,224,27,90,156,226,45,123,207,39,133,232,81,193,55,180,56,196,89,247,157,78,10,208,162,129,109,103,112,137,178,237,59,156,19,160,69,2,218,206,224,17,100,218,118,57,38,64,137,4,180,156,192,35,200,180,235,114,76,128,18,8,104,57,128,69,144,104,214,227,153,0,36,16,0,0,0

;NTSC Tones
NTSCToneHighByte     byte 1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,4,4,4,4,5,5,5,6,6,7,7,7,8,8,9,9,10,11,11,12,13,14,14,15,16,17,18,19,21,22,23,25,26,28,29,31,33,35,37,39,42,44,47,50,53,56,59,63,67,71,75,79,84,89,94,100,106,112,119,126,134,142,150,159,168,179,189,200,212,225,238,253,0,0
NTSCToneLowByte    byte 12,28,45,63,82,102,123,146,170,195,222,250,24,56,90,126,164,204,247,36,84,134,188,245,49,113,180,252,72,152,237,72,167,12,120,233,98,226,105,248,144,48,219,143,78,25,240,211,196,195,209,240,31,97,182,30,157,50,223,166,136,134,163,224,63,194,107,61,58,100,190,76,15,12,70,191,125,132,214,122,115,200,125,151,30,24,139,127,251,7,172,244,231,143,249,47,0,0

frameinterval           byte 48        
fadeouttime             byte 255
numloopsconst           byte 1

UseNoise                byte 1

; auto generated script data goes here


